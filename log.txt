***********Log file: we'll be logging progress and actions undertaken through this project here***********
// Pablo Carmona Benito - Internship at AVS - Added Value Solutions. 7 mar 2022 - 7 jun 2022

7 mar - presentation and initial approach to the problem: retrieving pictures of a project from the folders containing project's information. Stages definition: version 1 must be able to find IMAGE files (.jpg, .jpeg, .png, .tiff ...); version 2 should be able to get also images included in other files (i.e. in a .pdf). *Some research is needed in order to assure this is possible.

8 mar - coding starts. Work'll be done using:
      · VS Code / Atom
      · DevC++
      · GitHub
      Some extra software needs to be installed: MinGW compiler and extensions for C/C++. Particularly, C++17 is needed, and the "filesystem" package from "boost" library

9 mar - permission achieved to install MinGW on AVS computer. Coding goes on (see sources.txt to find the references used). A program is created which allows to create new directories inside of another one.

10 mar - no progress is made on this task. Dedicated to Catalogue.

11 mar - coming to realize that MinGW version installed is an obsolete one: it doesn´t include C++17 version requirements neither boost library (thus nor filesystem pack.). As new permission must be asked, in the meantime, and also looking ahead to do some work at home, coding will be done on personal computer. No information from the Catalogue and projects will be moved outside AVS computer. Little progress, trying to install a valid compiler version.

14 mar - key found to being able to compile. New MinGW version installed (on PC) and filesystem detected as a namespace.

15 mar - research on .exe files in Windows and compilation process in VSCode. DevC++ not useful by now (although compilation is easier, compiler requires to add dependencies to its path, and it's not clear which directories in particular must be directed in path).

16 mar - made a safety copy of initial draft, and started working on a test program. Got to succesfully build (.exe) and run code.

17 mar - Some more catalogue work and minor advance in code. Succesfully created direcctories and obtained a path list of the current directory, using std::filesystem.

18 mar - successfully fulfilled coding tasks involved in V1. Code works properly. Code is to be arranged and cleaned. If on time, functional .exe will be generated.
         In order to the code to be more ordered, following modifications are needed:
         - Creating global variables to deal with needed parameters OR PREFERABLY creating functions that get those parameters and give them back properly edited
         - No library will be created by now, since it's an easy program, there'll be no more than 3 or 4 functions, and inserting and using libraries might be risky with executable or batch files. Also it's a pain for system migration.
       - successfully generated functional .exe program which works on Windows

21 mar - clarifyng comments added, useless comments and variables deleted, synchronized with the repo, started report of V1

22 mar - created GitHub release v1, finished report V1. Started fixes for v2

23 mar - no progress. Catalogue work

24 mar - no progress. Catalogue work

25 mar - kept working on fixes for v2: list cleaning of repeated files, renaming files w same nime but different SIZES

28 mar - achieved a working version which renames files w same name but different sizes. Proceeding to clean code.

29 mar - catalogue work

30 mar - made needed changes so that program filters video files too. Working version. Also added filtering condition: check last modification date; if two files in
list have same modification date, they'll be suspected to be the same file. I discourage using this filter condition alone, for two files may have different
modification dates and still be the same file. Size condition looks robust, and combining both is robust for sure. We'll shallowly test for operation time and then
decide if size condition is to be used on its own, or it'll be combined w/ date information

31 mar - quick testing for the code: modification date condition can lead to some troubles. Images vary their modification date for several reasons. What we'll do:
         we'll leave the date variables and comment the date condition, so it is there for anyone who wants to use it; but program'll be compiled w/out the condition.

1 apr

4 apr

5 apr

6 apr

7 apr

8 apr

11 apr

12 apr

13 apr

14 apr

15 apr

18 apr

19 apr

20 apr

21 apr

22 apr

25 apr

26 apr

27 apr

28 apr

29 apr

2 may

3 may

4 may

5 may

6 may

9 may

10 may

11 may

12 may

13 may

16 may

17 may

18 may

19 may

20 may

23 may

24 may

25 may

26 may

27 may

30 may

31 may

1 jun

2 jun

3 jun

6 jun

7 jun

